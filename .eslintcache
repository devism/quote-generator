[{"/Users/ism/Documents/Web_Development/random-quote-generator/random-quote/src/reportWebVitals.js":"1","/Users/ism/Documents/Web_Development/random-quote-generator/random-quote/src/App.js":"2","/Users/ism/Documents/Web_Development/random-quote-generator/random-quote/src/index.js":"3"},{"size":362,"mtime":1606878668409,"results":"4","hashOfConfig":"5"},{"size":1831,"mtime":1607063690605,"results":"6","hashOfConfig":"5"},{"size":619,"mtime":1607064704318,"results":"7","hashOfConfig":"5"},{"filePath":"8","messages":"9","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"xhulx0",{"filePath":"10","messages":"11","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"12"},{"filePath":"13","messages":"14","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/ism/Documents/Web_Development/random-quote-generator/random-quote/src/reportWebVitals.js",[],"/Users/ism/Documents/Web_Development/random-quote-generator/random-quote/src/App.js",["15","16","17","18","19","20"],"import logo from './logo.svg';\nimport './App.css';\nimport React, { useState, useEffect } from 'react';\nimport  {faTwitter} from '@fortawesome/free-brands-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport Anime, {anime} from 'react-anime';\nimport data from './data/data.json';\n\nlet quotes = data;\n\nlet randomQuote = quotes.quotes[Math.floor(Math.random() * quotes.quotes.length)];\n\n// let animate = '360deg';\nlet animate = '0deg';\nfunction App() {\n \n  const [quote, setQuote] = useState(randomQuote.quote);\n  const [quoteAuthor, setAuthor] = useState(randomQuote.author);\n  const [quoteImage, setImage] = useState(randomQuote.image);\n  // const [animate, setAnimate] = useState('0deg');\n\n  const newQuote = () => {\n    let randomQuote = quotes.quotes[Math.floor(Math.random() * quotes.quotes.length)];\n    setQuote(randomQuote.quote)\n    setAuthor(randomQuote.author)\n    setImage(randomQuote.image)\n\n    if(animate == '0deg'){\n      animate = '360deg';\n    } else {\n      animate = '0deg';\n    }\n\n    // setAnimate('360deg');\n    // console.log(animate);\n  }\n  \n  \n  const tweet = 'http://twitter.com/intent/tweet?text=' + encodeURIComponent(quote) + ' -' + encodeURIComponent(quoteAuthor);\n\n  \n  return (\n    <Anime translateY={'2em'} rotate={animate}>\n    <div id=\"quote-box\" className=\"wrapper\">\n      <div id=\"text\"></div>\n      <p className=\"quote\" id=\"quote\">{quote}</p>\n      <p id=\"author\"> - {quoteAuthor}</p>\n      <img src={quoteImage}/>\n      <div>\n        <button id=\"new-quote\" className=\"new-quote-btn\" onClick={newQuote}>\n          New Quote\n        </button>\n        \n        <a target=\"_blank\" className=\"twitter-share-button\" href={tweet} id=\"tweet-quote\"> <FontAwesomeIcon icon={faTwitter} /> Tweet Quote</a>\n      </div>\n    </div> \n    </Anime>\n    )\n}\n\nexport default App;\n","/Users/ism/Documents/Web_Development/random-quote-generator/random-quote/src/index.js",[],{"ruleId":"21","severity":1,"message":"22","line":1,"column":8,"nodeType":"23","messageId":"24","endLine":1,"endColumn":12},{"ruleId":"21","severity":1,"message":"25","line":3,"column":27,"nodeType":"23","messageId":"24","endLine":3,"endColumn":36},{"ruleId":"21","severity":1,"message":"26","line":6,"column":16,"nodeType":"23","messageId":"24","endLine":6,"endColumn":21},{"ruleId":"27","severity":1,"message":"28","line":28,"column":16,"nodeType":"29","messageId":"30","endLine":28,"endColumn":18},{"ruleId":"31","severity":1,"message":"32","line":48,"column":7,"nodeType":"33","endLine":48,"endColumn":30},{"ruleId":"34","severity":1,"message":"35","line":54,"column":12,"nodeType":"36","endLine":54,"endColumn":27},"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'useEffect' is defined but never used.","'anime' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","JSXAttribute"]